The Gameplay Loop


The initial gameplay loop's job is mostly to switch between rooms. The dev_input variable decides what room to enter.
  The main gameplay loop is located in sd_rooms.  In order to leave the room, the enter loop must return a string 
  which changes the dev_input variable and starts the loop again to decide which room to enter next.  
  
  
Creating instances:
  The main file, silly_dungeon3, creates instances of each of the rooms as well as the player and the item dictionary. 
  By using these instances and then passing those instances into each enter() function, this allows changes to be saved as 
  the user goes from room to room  and takes or doesn't take items. 


Within the enter function, processing the user's input through if statements is the primary way add new mechanics to the game, 
or new ways for the user to access and use new items and rooms. Everything is set up as general as possible, and items are looked 
up in the dictionary in order to get their function (ex: item_dict.get(item).read() to read a paper)
